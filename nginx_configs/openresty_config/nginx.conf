
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	include       mime.types;
	default_type application/octet-stream;
	lua_package_path "/usr/local/share/lua/5.1/?.lua;;";
	##
	# SSL Settings
	##
	log_format combined_ssl '$remote_addr - $remote_user [$time_local] '
                        '$ssl_protocol/$ssl_cipher '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'SessionId=$ssl_session_id'
                        'ConVarified?=$ssl_client_verify';

	ssl_protocols TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;
	access_log logs/access.log;
	error_log logs/error.log debug;
    	sendfile        on;
    	tcp_nopush     on;
    	tcp_nodelay     on;

    	#keepalive_timeout  0;
    	keepalive_timeout  65;

    	gzip  on;

	server {
        	listen 4001 ssl;
                #http2 on;

	location /web {
        	content_by_lua_block {

            		local jwt = require "resty.jwt"
            		local ck = require "resty.cookie"

	    		if ngx.var.uri == "/web/login" then
                		ngx.exec("@login")
                		return
           	 	end

            		local jwt_token = ck:new():get("authToken")
            		if not jwt_token then
                		ngx.status = 401
                		ngx.say("JWT token is missing in the cookie.")
                		ngx.exit(ngx.HTTP_UNAUTHORIZED)
                		return
            		end

	    		local expected_algorithm = "ES256"
            		local public_key = "/root/digitalSignage/pki/device-server/device-server-cert.pem"
            		local public_key = [[-----BEGIN CERTIFICATE-----
MIICXjCCAgOgAwIBAgIUB07zwGhgSRH4FhEGMsQtltBxYgMwCgYIKoZIzj0EAwIw
fTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkhlc3NlbjEMMAoGA1UEBwwDRlJBMRAw
DgYDVQQKDAdGUkEtVUFTMQwwCgYDVQQLDANGQjIxEDAOBgNVBAMMB1RFU1RfQ0Ex
HTAbBgkqhkiG9w0BCQEWDnRlc3RAZ21haWwuY29tMB4XDTIzMDgxODIzNDcxOVoX
DTI0MDgxNzIzNDcxOVowgYMxCzAJBgNVBAYTAkRFMQ8wDQYDVQQIDAZIZXNzZW4x
DDAKBgNVBAcMA0ZSQTEQMA4GA1UECgwHRlJBLVVBUzEMMAoGA1UECwwDRkIyMRcw
FQYDVQQDDA5kZXZpY2UuZHNzLmNvbTEcMBoGCSqGSIb3DQEJARYNdGxzQGdtYWls
LmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABO8pQfaB0rwMN12Q6iiFs8cJ
+Oelc/1dSY5KHiWUwXsXF6VIG1rJqFqgLYfRBk7qacdYfLXGBRExxmngOvWAoOWj
WjBYMCoGA1UdEQQjMCGCDmRldmljZS5kc3MuY29tgglsb2NhbGhvc3SHBAAAAAAw
CwYDVR0PBAQDAgTwMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAKBggq
hkjOPQQDAgNJADBGAiEA3bgBXTvOD+PMZaUxOh+UUuzFgnL3f4mRu6cuM3eB42wC
IQD1I2yPMymovriqqD0RcitQZHUhBGyKkh1zGrv66h/kmQ==
-----END CERTIFICATE-----]]
			-- jwt:set_trusted_certs_file("/root/digitalSignage/pki/device-server/device-server-cert.pem")
			local jwt_obj = jwt:load_jwt(jwt_token)
local verify = jwt:verify_jwt_obj(public_key, jwt_obj)
            
			if verify["verified"] then
        	        	ngx.exec("@proxy")
            		else
                		ngx.status = 401
                		ngx.say(verify["reason"])
                		ngx.exit(ngx.HTTP_UNAUTHORIZED)
                		return
            		end
        		}
		}
	
    		location /device {
        		proxy_pass http://localhost:8001;
        		proxy_redirect off;
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Host $server_name;
    		}

    		location @login {
        		proxy_pass http://localhost:8001;
        		proxy_redirect off;
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Host $server_name;
    		}
	
		location @proxy {
        		proxy_pass http://localhost:8001;
        		proxy_redirect off;
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Host $server_name;
    		}

                #log_format             ssl_client;
                access_log              logs/device.listener.log combined_ssl;

                ssl_protocols           TLSv1.2 TLSv1.3;
                ssl_certificate         /root/digitalSignage/pki/device-server/device-server-cert.pem;
                ssl_certificate_key     /root/digitalSignage/pki/device-server/device-server-key.pem;
                ssl_client_certificate  /root/digitalSignage/pki/ca/ca-cert.pem;
                ssl_verify_client       on;
                ssl_verify_depth        1;
                server_name device.dss.com;
        }


	server {
        	listen 4000 ssl;

    		location / {
        		proxy_pass http://localhost:8000;
        		proxy_redirect off;
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Host $server_name;
    		}
	
                access_log              logs/register.listener.log combined_ssl;

                ssl_protocols           TLSv1.2 TLSv1.3;
                ssl_certificate         /root/digitalSignage/pki/reg-server/reg-server-cert.pem;
                ssl_certificate_key     /root/digitalSignage/pki/reg-server/reg-server-key.pem;
                ssl_client_certificate  /root/digitalSignage/pki/ca/ca-cert.pem;
                ssl_verify_client       on;
                ssl_verify_depth        1;
                server_name register.dss.com;
        }

	server {
        	listen 443 ssl;

    		location / {
        		proxy_pass http://localhost:3000;
        		proxy_redirect off;
        		proxy_set_header Host $host;
        		proxy_set_header X-Real-IP $remote_addr;
        		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        		proxy_set_header X-Forwarded-Host $server_name;
    		}
	
                access_log              logs/web.listener.log combined_ssl;

                ssl_protocols           TLSv1.2 TLSv1.3;
                ssl_certificate         /root/digitalSignage/pki/web-server/server-cert.pem;
                ssl_certificate_key     /root/digitalSignage/pki/web-server/server-key.pem;
                ssl_client_certificate  /root/digitalSignage/pki/ca/ca-cert.pem;
                ssl_verify_client       on;
                ssl_verify_depth        1;
                server_name web.dss.com;
        }
}
